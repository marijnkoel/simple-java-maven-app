# More information about these properties: https://github.com/J-Technologies/jAPK/tree/master/toelichting

# 2.1 Amount of interfaces and types
architecture.interfaces=good
# 2.2 Functional Complexity
architecture.complexity=ok
# 2.3 Spacial data
architecture.spacialData=bad
# 2.4 Historical models
architecture.historicalModels=good
# 2.5 Complex interfaces
architecture.complexInterfaces=good
# 2.6 Separate responsibilities (single responsibility)
architecture.singleResponsibility=good
# 2.7 Certificate handling in Java Application
architecture.certificateHandling=good
# 2.8 Untested hidden code
architecture.untestedCode=good
# 2.9 Module structure
architecture.moduleStructure=good
# 2.10 Modified generated code
architecture.generatedCode=good
# 2.11 Modified libraries
architecture.modifiedLibraries=good


# 3.1 Version control tools
documenation.versionControl=good
# 3.2 Wiki
documenation.wiki=good
# 3.3

# 3.4 up to date?
documenation.uptodate=good
# 3.5 Accessibility (no protected directories)
documenation.accessibility=good
# 3.6 Documentation understandable (structured, easy to read)
documenation.structuredDocumentation=good
# 3.7 Documentation Complete?
documentation.complete=good

# 4.1 lines of code
metrics.linesOfCode=bad
# 4.2 amount of classes
metrics.classCount=bad
# 4.3 methodes size
metrics.methodeSize=good
# 4.4 Criticals, Majors
metrics.criticalsMajors=good
# 4.5 TestCoverage
metrics.testCoverage=good

# 5.1 How does the code read?
codereview.readableCode=good
# 5.2 Package Structure
codereview.packageStucture=good
# 5.3 Use of date / time framework
codereview.timeDateFramework=good
# 5.4 No unnecessary "hatch" layers
codereview.unnecessaryLayers=good
# 5.5 Usage of libraries
codereview.libraryUsage=good
# 5.6 Unittest quality
codereview.unittestQuality=good
# 5.7 WEB-INF/lib check
codereview.webInfLibCheck=good
# 5.8 healthCheck check
codereview.healthCheck=good
# 5.9 Potential concurrency issues
codereview.concurrecyIssues=good
# 5.10 Javascript Libraries
codereview.javascriptLibraries=good

# 6.1 Code insertion
security.codeInsertion=good
# 6.2 User passwords not visible to administrators
security.passwordVisability=good
# 6.3 HTTPS Usage
security.httpsUsage=good
# 6.4 Input validation frontend and backend
security.inputValidation=good
# 6.5 Hardcoded passwords
security.passwordHardcoded=good
# 6.6 Vulnerable libraries
securuty.vulnerableLibraries=good

# 7.1 Outdated libraries
maintenance.outdatedLibraries=good
# 7.2 Platform
maintenance.platform=good
# 7.3 Java versie
maintenance.javaVersion=good
# 7.4 Known issues
maintenance.knownIssues=good
# 7.5 Workarounds and shortcuts
maintenance.workarroundsShortcuts=good

# 8.1 Automated integration and deployment
toolsAndInfrastructure.integrationAndDeployment=good
# 8.2 Build Failure and Skiptests
toolsAndInfrastructure.buildFailure=good
# 8.3 Generated files by version control tools
toolsAndInfrastructure.generatedFiles=good
# 8.4 Authentication or Authorization
toolsAndInfrastructure.authenticationAuthorization=good
# 8.5 Portability
toolsAndInfrastructure.Portability=good

